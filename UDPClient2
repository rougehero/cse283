package homework;

import java.net.*;
import java.time.LocalDateTime;
import java.util.Random;
import java.io.*;


public class UDPClient2 {
	
	public static void main(String args[]){
		
		DatagramSocket aSocket = null;
		 if (args.length < 3) {
		 
			System.out.println(
					"Usage: java UDPClient <message> <Host name> <Port number>");
			System.exit(1);
		}
		try {
			aSocket = new DatagramSocket();
		    byte [] m = args[0].getBytes();
			InetAddress aHost = InetAddress.getByName(args[1]);
			int serverPort = Integer.valueOf(args[2]).intValue();
			DatagramPacket request = new DatagramPacket(m, args[0].length(), aHost, serverPort);
			aSocket.send(request);
			byte[] buffer = new byte[1000];
			DatagramPacket reply = new DatagramPacket(buffer, buffer.length);
			aSocket.receive(reply);
			
			byte [] receiveBytes = new byte[10000];
			receiveBytes = reply.getData();
			String decodedReply = new String(receiveBytes, "UTF-8").substring(0,8);
			
			int serverHour = Integer.parseInt(decodedReply.substring(0,1));
			int serverMinute = Integer.parseInt(decodedReply.substring(3,4));
			int serverSecond = Integer.parseInt(decodedReply.substring(6,7));
			
			System.out.println("Server Time: " + decodedReply);
			
			Random timeGenerator = new Random();
			int randomHour = timeGenerator.nextInt(24);
			int randomMinute = timeGenerator.nextInt(61);
			int randomSecond = timeGenerator.nextInt(61);
			
			LocalDateTime randomTime = LocalDateTime.of(1, 1, 1, randomHour, randomMinute, randomSecond);
			String clientTime = randomTime.toString().substring(11, 19);
			
			System.out.println("Client time (randomly generated): " + clientTime);
			
			int timeDifferenceHour = (serverHour - randomHour);
			
			if(timeDifferenceHour < 0){
				int hourChanged = Math.abs(timeDifferenceHour);
				timeDifferenceHour = 23 - hourChanged;
			}
			
			int timeDifferenceMinute = (serverMinute - randomMinute);
			if(timeDifferenceMinute >= 60){
				timeDifferenceMinute = timeDifferenceMinute - 60;
				timeDifferenceHour++;
				
			}
			
			if(timeDifferenceMinute < 0){
				int minuteChanged = Math.abs(timeDifferenceMinute);
				timeDifferenceMinute = 59 - minuteChanged;
				timeDifferenceHour--;
				
			}
			
			int timeDifferenceSecond = (serverSecond - randomSecond);
			if(timeDifferenceSecond >= 60){
				timeDifferenceSecond = timeDifferenceSecond - 60;
				timeDifferenceMinute++;
			}
			
			if(timeDifferenceSecond < 0){
				int secondChanged = Math.abs(timeDifferenceSecond);
				timeDifferenceSecond = 59 - secondChanged;
				timeDifferenceMinute--;
			}
			
			LocalDateTime serverAndClientChange = LocalDateTime.of(1,  1, 1, timeDifferenceHour, timeDifferenceMinute, timeDifferenceSecond);
			String timeDifference = serverAndClientChange.toString().substring(11, 19);
			System.out.println("Time difference: " + timeDifference);
			

		}
		catch (SocketException e) {
			System.out.println("Socket: " + e.getMessage());
		}
		catch (IOException e) {
			System.out.println("IO: " + e.getMessage());
		}
		finally {
			if (aSocket != null)
				aSocket.close();
		}
	}
}
